vertex.label.cex=.6,		#specifies the size of the font of the labels. can also be made to vary
vertex.size = 6
)
q()
load("~/Documents/Projects/Radiomix/NLSTv6/c_names.rda")
dim(c_names)
c_names[1:10]
c_names[1:120]
120-42
c_names[42]
c_names[120]
q()
q()
load("~/Documents/Projects/Radiomix/NLSTv6/pre_train_CVs.rda")
CVs[,4]
CVs[,5]
load("~/Documents/Projects/Radiomix/NLSTv6/x_pre_train.rda")
load("~/Documents/Projects/Radiomix/NLSTv6/y_train.rda")
require(panning2)
y_train <- matrix(as.numeric(y_train),nc=1L)-1L
set.seed(89324L)
graine <- sample.int(1e6,1600)
CVs <- matrix(nr=78,nc=1599)
j=5
var_mat <- seq.int(18,ncol(x_train),78) + j - 1L
i=
8
rc <- var_mat[i]
cv <- NA
set.seed(graine[j]+i)
cv <- cross_validation_logistic(matrix(x_train[,rc],nr=1L), y_train, 10L, 10L)
set.seed(8934L)
graine <- sample.int(1e6,1600)
var_mat <- seq.int(18,ncol(x_train),78) + j - 1L
rc <- var_mat[i]
cv <- NA
set.seed(graine[j]+i)
cv <- cross_validation_logistic(matrix(x_train[,rc],nr=1L), y_train, 10L, 10L)
rm(list=ls())
q()
q()
q()
q()
x <- rnorm(1e2)
y <- x^3 + rnorm(1e2)
plot(y,x)
plot(x,y)
set.seed(321)
d_f <- data.frame(
x1 = rnorm(100),
x2 = rnorm(100)
)
ggplot(d_f, aes(x=x1,y=y1)) + geom_point()
require(ggplot2)
set.seed(321)
d_f <- data.frame(
x1 = rnorm(100),
x2 = rnorm(100)
)
ggplot(d_f, aes(x=x1,y=y1)) + geom_point()
ggplot(d_f, aes(x=x1,y=x2)) + geom_point()
q()
q()
q()
q()
q()
q()
cars2 <- cars
cars2$dist
fit_lm <- lm(dist ~ speed, data = cars)
coefficients(fit_lm)
coef(fit_lm)
cars2$speed
cars2 <- cars
beta <- coef(fit_lm)
sigma2 <- cars2$speed^1.2
cars2$dist
cars2 <- cars
# extract coefficients from the regression
beta <- coef(fit_lm)
# define new variance and errors
sigma2 <- cars2$speed^1.2
set.seed(4322)
eps <- rnorm(nrow(cars2), sd=sqrt(sigma2))
# simulate new dist variable
cars2$dist <- beta[1] + beta[2] * cars$speed + eps
plot(cars2)
q()
fit_lm <- lm(dist ~ speed, data = cars)
cars2 <- cars
beta <- coef(fit_lm)
sigma2 <- cars2$speed^3
set.seed(4322)
eps <- rnorm(nrow(cars2), sd=sqrt(sigma2))
cars2$dist <- beta[1] + beta[2] * cars$speed + eps
fit_lm2 <- lm(dist ~ speed, data = cars2s)
fit_lm2 <- lm(dist ~ speed, data = cars2)
summary(fit_lm2)
require(ggfortify)
autoplot(fit_lm2, which = 1, label.size = 3)
cars2 <- within(cars2, dist = log(dist))
?within
cars2 <- within(cars2, dist <- log(dist))
cars2
cars2$dist <- beta[1] + beta[2] * cars$speed + eps
cars2
cars2$dist <- beta[1] + beta[2] * cars$speed + abs(eps)
fit_lm2 <- lm(dist ~ speed, data = cars2)
autoplot(fit_lm2, which = 1, label.size = 3)
cars3 <- within(cars2, dist <- log(dist))
fit_lm3 <- lm(dist ~ speed, data = cars3)
autoplot(fit_lm3, which = 1, label.size = 3)
autoplot(fit_lm, which = 1, label.size = 3)
autoplot(fit_lm2, which = 1, label.size = 3)
bc <- MASS::boxcox(dist ~ speed, cars2)
bc <- MASS::boxcox(dist ~ speed, data = cars2)
bc
summary(bx)
summary(bc)
d_f <- data.frame()
d_f <- data.frame()
d_f <- data.frame(
residual = residuals(fit_lm),
speed = cars$speed
)
ggplot(d_f, aes(x=speed,y=residuals)) + geom_point()
ggplot(d_f, aes(x=speed,y=residual)) + geom_point()
fit_lm2 <- lm(y ~ x + I(x^2))
set.seed(1234)
x <- rnorm(1000)
y <- x * x + rnorm(1000)
fit_lm2 <- lm(y ~ x + I(x^2))
summary(fit_lm2)
load("~/Documents/Projects/Radiomix/NLSTv6/CVs3.rda")
boxplot(CVs)
q()
q()
q()
set.seed(1234)
x <- rnorm(1000)
y <- x * x + rnorm(1000)
fit_lm3 <- lm(y ~ poly(x,3))
?step
ms <- step(fit_lm3)
ms
summary(ms)
str(ms)
ms2 <- MASS:stepAIC(fit_lm3)
ms2 <- MASS::stepAIC(fit_lm3)
summary(ms2)
fit_lm <- lm(y ~ x + x)
summary(fit_lm)
x2 <- x
fit_lm <- lm(y ~ x + x2)
summary(fit_lm)
set.seed(1234)
x <- rnorm(1000)
y <- x + rnorm(1000)
# Create a new variable very similar to "x"
x2 <- x + rnorm(1000,sd=.001)
require(ggplot2)
qplot(x,x2)
set.seed(1234)
x <- rnorm(1000)
y <- x + rnorm(1000)
# Create a new variable very similar to "x"
x2 <- x + rnorm(1000,sd=.01)
qplot(x,x2)
set.seed(1234)
x <- rnorm(1000)
y <- x + rnorm(1000)
# Create a new variable very similar to "x"
x2 <- x + rnorm(1000,sd=.1)
qplot(x,x2)
fit_lm2 <- lm(y ~ x + x2)
summary(fit_lm2)
fit_lm <- lm(y ~ x)
summary(fit_lm)
fit_lm3 <- lm(y ~ x2 + x)
summary(fit_lm3)
step(fit_lm2)
qplot(residuals(fit_lm2),x)
qplot(residuals(fit_lm2),x2)
q()
q()
set.seed(1234)
x <- rnorm(1000)
y <- x + rnorm(1000)
x2 <- x + rnorm(1000,sd=.1)
qplot(x,x2)
require(ggplot2)
qplot(x,x2)
fit_lm <- lm(y ~ x)
fit_lm1 <- lm(y ~ x2)
fit_lm2 <- lm(y ~ x + x2)
coefficients(fit_lm)
coefficients(fit_lm1)
coefficients(fit_lm2)
coef(fit_lm)
q()
q()
q()
q()
q()
set.seed(1234)
x <- rnorm(1000)
y <- x + rnorm(1000)
# Create a new variable very similar to "x"
x2 <- x + rnorm(1000,sd=.1)
fit_lm <- lm(y ~ x)
fit_lm1 <- lm(y ~ x2)
fit_lm2 <- lm(y ~ x + x2)
require(ggplot2)
d_f <- data.frame(
residual = residuals(fit_lm),
x = x
)
ggplot(d_f, aes(x=x,y=residual)) + geom_point()
d_f <- data.frame(
residual = residuals(fit_lm2),
x = x
)
ggplot(d_f, aes(x=x,y=residual)) + geom_point()
?arima.sim
require(ggfortify)
autoplot(fit_lm2, which=1, label=3)
summary(fit_lm)
summary(fit_lm2)
q(9)
q()
q()
n <- 100
# coefficients
beta0 <- 1
beta1 <- 2
alpha <- 0.5
# Generate obsrevations
y <- numeric(n)
set.seed(43)
eps <- rnorm(n)
x <- rnorm(n)
y[1] <- beta0 + beta1 * x[1] + eps[1]
for(i in 2:n){
y[i] <- beta0 + beta1 * x[i] + alpha * y[i-1] + eps[i]
}
acf(y)
ggplot2::ggAcf(y)
forecast::ggAcf(y)
install.packages("forecast")
?rlm
?MASS::rlm
data("mtcars")
head(mtcars)
plot(mtcats)
plot(mtcars)
dim(mtcars)
qplot(mtcars$mpg,mtcars$disp)
require(ggplot2)
qplot(mtcars$mpg,mtcars$disp)
qplot(mtcars$mpg,mtcars$hp)
qplot(mtcars$mpg,mtcars$drat)
qplot(mtcars$mpg,mtcars$wt)
?I
str(mtcars)
# Modify into factors
mtcars2 <- mtcars
mtcars2$cyl <- as.factor(mtcars$cyl)
mtcars2$vs <- as.factor(mtcars$vs)
mtcars2$am <- as.factor(mtcars$am)
mtcars2$gear <- as.factor(mtcars$gear)
mtcars2$carb <- as.factor(mtcars$carb)
fit_lm <- lm(mpg ~ . + I(log(disp)) + poly(disp,3) + I(log(hp)) + poly(disp,3) , data = mtcars2)
summary(fit_lm)
str(mtcars)
str(mtcars2)
fit_lm <- lm(mpg ~ cyl + poly(disp,3) + I(log(disp)) + poly(hp,3) + I(log(hp)) +
poly(drat,3) + I(log(drat)) + poly(wt,3) + I(log(wt)) + poly(qsec,3) +
I(log(qsec)) + vs + am + gear + carb, data = mtcars2)
summary(fit_lm)
fit_lm <- lm(mpg ~ cyl + poly(disp,3) + poly(hp,3) + poly(drat,3) + poly(wt,3) +
poly(qsec,3) + vs + am + gear + carb, data = mtcars2)
summary(fit_lm)
stepAIC(fit_lm)
require(MASS)
stepAIC(fit_lm)
head(mtcars2)
fit_lm2 <- lm(mpg ~ . + I(disp^2) + I(disp^3) + I(hp^2) + I(hp^3) +
I(drat^2) + I(drat^3) + I(wt^2) + I(wt^3) + I(qsec^2) + I(qsec^3), data = mtcars2)
stepAIC(fit_lm2)
extractAIC(fit_lm2)
fit_aic <- stepAIC(fit_lm2)
summary(fit_aic)
summary(fit_lm2)
?predict
head(mtcars)
head(mtcars2)
x_new <- data.frame(cyl = 6, disp = 150, hp = 102, drat = 2.05, wt = 4.03,
qsec = 15.01, vs = 0, am = 1, gear = 3, carb = 2)
predict(fit_aic, newdata = x_new)
x_new <- data.frame(cyl = 6, disp = 150, hp = 102, drat = 2.05, wt = 4.03,
qsec = 15.01, vs = 0, am = 1, gear = 3, carb = 2)
predict(fit_lm2, newdata = x_new)
x_new <- data.frame(cyl = '6', disp = 150, hp = 102, drat = 2.05, wt = 4.03,
qsec = 15.01, vs = '0', am = '1', gear = '3', carb = '2')
predict(fit_aic, newdata = x_new)
predict(fit_aic, newdata = x_new, interval = "predict")
predict(fit_aic, newdata = x_new, interval = "confidence")
q()
gini <- function(x){2*sum(sort(x)*seq_along(x))/sum(x)/length(x) -1L-1L/length(x)}
n <- 3
set.seed(3218)
x0 <- rexp(n,rate = 1)
gini(x0)
B <- 1e3
boot <- matrix(nr=B,nc=2)
for(i in seq_len(B)){
set.seed(i)
x <- x0[sample.int(n,n,replace=T)]
boot[i,1] <- gini(x)
set_seed(i)
x <- rexp(n)
boot[i,2] <- gini(x)
}
gini <- function(x){2*sum(sort(x)*seq_along(x))/sum(x)/length(x) -1L-1L/length(x)}
n <- 3
set.seed(3218)
x0 <- rexp(n,rate = 1)
gini(x0)
B <- 1e3
boot <- matrix(nr=B,nc=2)
for(i in seq_len(B)){
set.seed(i)
x <- x0[sample.int(n,n,replace=T)]
boot[i,1] <- gini(x)
set.seed(i)
x <- rexp(n)
boot[i,2] <- gini(x)
}
hist(boot[,2],probability=T)
lines(density(boot[,1]),lwd=1.5)
boot[,2]
mean(boot[,2]<.5)
mean(boot[,2]>.5)
gini(x0)
gini <- function(x){2*sum(sort(x)*seq_along(x))/sum(x)/length(x) -1L-1L/length(x)}
n <- 1e1
B <- 1e3
set.seed(123)
graine <- sample.int(1e6,B)
boot <- numeric(B)
ci <- numeric(B)
for(i in seq_len(B)){
for(j in seq_len(B)){
set.seed(graine[i]+j)
x <- rexp(n)
boot[j] <- gini(x)
}
ci[i] <- mean(boot<.5)
print(i)
}
ci
graine
ci
hist(boot)
rm(list=ls())
theta <- 3
sigma2 <- 3
mu <- 5
tau2 <- 1
n <- 1e2
set.seed(123)
x <- rnorm(n,mean=theta,sd=sqrt(sigma2))
x_s <- sum(x)
beta <- 1 / (1/tau2 + n/sigma2)
alpha <- beta * ( mu/tau2 + x_s/sigma2)
B <- 1e4
u_hat <- numeric(B)
theta_star <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star[i] <- (x_s - sum(z)) / n
u_hat[i] <- pnorm(theta_star[i], mean = mu, sd = sqrt(tau2))
}
w <- dnorm(theta_star, mean = mu0, sd = sqrt(tau2))
w <- dnorm(theta_star, mean = mu, sd = sqrt(tau2))
theta_star2 <- theta_star[sample.int(B,B,replace=T,prob=w)]
hist(theta_star2, prob=T)
curve(dnorm(x, mean = alpha, sd = sqrt(beta)), add=T,lwd=2)
lines(density(theta_star),lwd=2,col=2)
exp(-1/2/tau2*(theta_star-mu)^2)
range(exp(-1/2/tau2*(theta_star-mu)^2))
of <- function(x,z,si,th,mu,ta){x-si*z-th*exp(-1/2/ta*(th-mu)^2)}
of <- function(th,x,z,si,mu,ta){x-si*z-th*exp(-1/2/ta*(th-mu)^2)}
range(theta_star)
of <- function(th,x,z,mu,ta){x-z-th*exp(-1/2/ta*(th-mu)^2)}
of <- function(th,x,z,mu,ta){x-z-th*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
uniroot(of,interval=c(-10,10),x=xs/n,z=mean(z),mu=mu,ta=tau2)
uniroot(of,interval=c(-10,10),x=x_s/n,z=mean(z),mu=mu,ta=tau2)
uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)
range(theta_star2)
of <- function(th,x,z,mu,ta){x-z-th*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3,prob=T)
curve(dnorm(x, mean = alpha, sd = sqrt(beta)), add=T,lwd=2)
curve(dnorm(x, mean = mu, sd = sqrt(tau2)), add=T,lwd=2)
curve(dnorm(x, mean = mu, sd = sqrt(tau2)), add=F,lwd=2)
tau2
mu
of <- function(th,x,z,mu,ta){x-z-th*exp(1/2/ta*(th-mu)^2)}
hist(theta_star3)
mean(theta_star3)
of <- function(th,x,z,mu,ta){x-z-th*exp(1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
mean(theta_star3)
hist(theta_star3)
of <- function(th,x,z,mu,ta){(x-z-th)*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3)
curve(dnorm(x, mean = alpha, sd = sqrt(beta)), add=T,lwd=2)
hist(theta_star3,prob=T)
curve(dnorm(x, mean = alpha, sd = sqrt(beta)), add=T,lwd=2)
lines(density(theta_star),lwd=2,col=2)
of <- function(th,x,z,mu,ta){(x-z-th)*dnorm(th,mean=mu,sd=sqrt(ta))}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3)
hist(theta_star3,prob=T)
curve(dnorm(x, mean = alpha, sd = sqrt(beta)), add=T,lwd=2)
of <- function(th,x,z,mu,ta){x-z-th*dnorm(th,mean=mu,sd=sqrt(ta))}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
theta_star3
of <- function(th,x,z,mu,ta){-th+(x-z)*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3,prob=T)
of <- function(th,x,z,mu,ta){th+(x-z)*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3)
hist(theta_star3,rpob=T)
hist(theta_star3,prob=T)
of <- function(th,x,z,mu,ta){x-z-th*exp(-1/2/ta*(th-mu)^2)}
# of <- function(th,x,z,mu,ta){x-z-th*dnorm(th,mean=mu,sd=sqrt(ta))}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3,prob=T)
of <- function(th,x,z,mu,ta){-x+z+th*exp(-1/2/ta*(th-mu)^2)}
theta_star3 <- numeric(B)
for(i in seq_len(B)){
set.seed(8972314+i)
z <- rnorm(n, sd = sqrt(sigma2))
theta_star3[i] <- uniroot(of,interval=c(-3,5),x=x_s/n,z=mean(z),mu=mu,ta=tau2)$root
}
hist(theta_star3,prob=T)
q()
q()
save(theta_hat,file="theta_hat.rda")
q()
setwd("~/Github/samorso/RM2017/")
ca
kars <- read.csv(file="~/Documents/Teaching/RM/kuiper.csv",sep=",")
head(kars)
fit_lm <- lm(Price ~ Mileage + Make + Doors, data = kars)
summary(fit_lm)
str(kars)
fit_lm <- lm(Price ~ Mileage + Make + as.factor(Doors), data = kars)
summary(fit_lm)
summary(kars$Doors)
table(kars$Doors)
require(ggfortify)
autoplot(fit_lm, which = 2, label.size=3)
q()
